# Terminal test thread (scheduled as audio)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE TERM_PG

# BMODE: column in AV used during block
# VLINE: line(page) in video ram
# VMS: [mode_line][e][cycle count]
#           0,1,2  0  0,1,2,3,4,5
#         3,4,5,6  1  0,1,2,3,4
#        7,8,9,10     0,1,2,3,4
#  11,12,13,14,15     0,1,2,3
# assume Y = $VMS
LDZ HL, $INCLINE$NULL
FNH DZ, HLD           # H=mode_line+1, L=E000
LD Y, $BMODE
VIDH DZ, SA           # mode_line, block mode —> S
#9/7
LDP HL, $IDEN$IDEN    # sign bit low, don’t inc vline
LDN HL, $INC$IDEN     # sign bit high, inc vline
LD Y, $VLINE
FNFH DZ, VD           # increment? vline —> V
FNFL E, HL            # serial inputs -> H
#20/17
LD Y, $COMLS
COMH DZ, ND           # update comms line state
# end of sync code
LD HL, $2COM$NULL
LDZ Y, $RXWRIDX
FNH DZ, HL            # HL=-rx write index
#31
LD Y, $RXRDIDX
ADDHL DZ, NA          # A=rx read-rx write index
LDN PC, $RX39         # receive byte if rx read < rx write
LD HL, $2COM$NULL
#40
LDZ Y, $KCWRIDX
FNH DZ, HL            # HL=-kc write index
LD Y, $KCRDIDX
ADDHL DZ, NA          # A=kc read-kc write index
#50
LDP PC, $EXIT52       # exit if kc read >= kc write
LD HL, $KCBUFF
MVHL A, XA
LDZ HL, $INC$NULL
FNH DZ, HLD           # kc read index+1
#61
LD HL, $IDEN$DEC
FNFL DZ, Y            # Y=kc read index-1
FNFH D, NA            # A=char
LD Y, $TERM_TEMP
#71
FNH AZ, HLD           # A->temp
LD HL, $0xF8          # HL=-BS
ADDHL A, NA           # A=char-BS
LD HL, $ZERO?$NULL
#81
FNH A, HLA            # char==BS?
LDP PC, $BS85
LDZ HL, $IDEN$NULL
FNH DZ, HLA           # A=temp
$CONT88
LD HL, $0xF6          # HL=-CR
#90
ADDHL A, NA           # A=char-CR
LD HL, $ZERO?$NULL
FNH A, HLA            # char==CR?
LDP PC, $CR100
LD HL, $INC2$NULL
#101
LD Y, $TERM_COL
FNFH DZ, XD           # X=col+2
LD HL, $IDEN$NULL
LD Y, $TERM_TEMP
#110
FNFH DZ, NA           # A=char
LDZ Y, $TERM_ROW
FNH DZ, Y             # Y=row
FNFH A, ND            # A->[X,Y]
#120
NOP
$CONT121
LD HL, $TXBUFF
MVHL A, XA
LD HL, $IDEN$NULL
LD Y, $TERM_TEMP
#131
FNFH DZ, NA           # A = temp
LDZ Y, $TXWRIDX
FNH DZ, Y
FNH A, HLD            # A -> tx wr buff
#140
LD HL, $INC$NULL
LDZ Y, $TXWRIDX
FNH DZ, HLD           # tx wr buff +1
LD HL, $0x20
LD Y, $TMODE
#150
ORHL DZ, ND           # enable -> tx mode
LD HL, $IDEN$3
LDZ Y, $VMS
ADDHL DZ, ND          # VMC+3
#162
LDZ Y, $INST
FNH DZ, HL            # inst cache -> HL
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#172

$RX39
NOP
#40
NOP
MVHL A, NA
MVHL A, NA
LD HL, $RXBUFF
#51
MVHL A, XA
LDZ HL, $INC$NULL
FNH DZ, HLD           # rx read index+1
LD HL, $IDEN$DEC
#61
FNFL DZ, Y            # Y=rx read index-1
FNFH D, NA            # A=char
LD Y, $TERM_TEMP
FNH AZ, HLD           # A->temp
#71
LD HL, $0xF3          # HL=-CR
ADDHL A, NA           # A=char-CR
LD HL, $ZERO?$NULL
FNH A, HLA            # char==CR?
#81
LDP PC, $EXIT83
LDZ HL, $IDEN$NULL
FNH DZ, HLA
LD PC, $CONT88

$BS85
LD HL, $IDEN$IDEN
LD Y, $TERM_COL
#89
FNFL DZ, X
LDZ Y, $TERM_ROW
FNH DZ, Y
MULH A, ND
#99
LD HL, $0xFE
LD Y, $TERM_COL
ADDHL DZ, XD
MVHL A, NA
#111
LD Y, $TERM_TEMP
LD HL, $0x11
MVHL AZ, ND
#119
LD PC, $CONT121

$CR100
LD HL, $INC$NULL
LD Y, $VSTART
FNFH DZ, ND           # vstart+1
LDZ Y, $TERM_ROW
FNH DZ, HLD           # row+1
#111
LD HL, $0x0D          # SVGA=0x0D,XGA=0x17
LD Y, $TERM_COL
MVHL AZ, ND           # start -> term column
LD PC, $CONT121

$EXIT83
LD HL, $INC$IDEN
LDZ Y, $VMS
FNH DZ, HLD           # VMC+1
NOP
#90
NOP
MVHL A, NA
$EXIT52
MVHL A, NA
MVHL A, NA
#60
MVHL A, NA
MVHL A, NA
LD HL, $INC$IDEN
#70
LDZ Y, $VMS
FNH DZ, HLD           # VMC+1
LD HL, $IDEN$NULL
LDZ Y, $INST
FNH DZ, HL            # inst cache -> HL
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86
