# Conditional call on flag set (rewrite Skip or Push PC)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE CALLS_PG

# assume: Y = $VMS
LD HL, $INC2$REGMAPL
FNFH DZ, ND           # inc state
LD Y, $INST
FNDL DZ, HL           # HL = multiplier to move flag to MSB
#10/8
LD Y, $FREG
MULH DZ, NA           # A MSB = flag to test
LD HL, $INC$FORK3
LD Y, $PCL
LDP PC, $SKIP_CALL    # skip call if flag not set
#20/18
FNFH DZ, XD           # X,PCL = PCL+1
FNDL A, PC
#26/22
$SKIP_CALL
LD HL, $DEC$NULL
LDZ Y, $VMS
FNH DZ, HLD          # decrement VMS, out of here in 1 cycle
LD HL, $SKIP_INST
LD PC, $CACHE_INST   # jump to end of first fork point
#31/31

ADDR 0x20             # PCL = 254, iden PCH, iden PCH, inc PCH
NOP
NOP
LD HL, $IDEN$NULL
#30/4
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TMPL
FNH AZ, HLD           # A -> temp
#41/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$NULL
#50/20
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TMPH
FNH AZ, HLD           # A -> temp2
#61/28
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, ND           # PCL = PCL+1
LDZ Y, $PCH
#70/36
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $PUSHPC_INST
$CACHE_INST
LD Y, $INST
MVHL AZ, ND           # HL -> inst cache
#80/43
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86(43)/47

ADDR 0x58             # PCL = 255, iden PCH, inc PCH, iden PCH
NOP
NOP
LD HL, $IDEN$NULL
#30/4
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TMPL
FNH AZ, HLD           # A -> temp
#41/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD Y, $PCH
#50/20
FNFH DZ, ND           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
#60/27
LD Y, $TMPH
FNH AZ, HLD           # A -> temp2
LD HL, $INC$NULL
LDZ Y, $PCL
FNH DZ, HLD           # PCL = PCL+1
#70/35
NOP
NOP
LD HL, $PUSHPC_INST
LD Y, $INST
MVHL AZ, ND           # HL -> inst cache
#80/43
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/47

ADDR 0x90             # PCL = 0, inc PCH, iden PCH, iden PCH
LDZ Y, $PCH
FNFH DZ, ND           # PCH = PCH+1      *** inc PCH ***
#31/4
LD HL, $IDEN$NULL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
#40/11
LD Y, $TMPL
FNH AZ, HLD           # A -> temp
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
#51/20
LD HL, $IDEN$NULL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
#60/27
LD Y, $TMPH
FNH AZ, HLD           # A -> temp2
LD HL, $INC$NULL
LDZ Y, $PCL
FNH DZ, HLD           # PCL = PCL+1
#70/35
NOP
NOP
LD HL, $PUSHPC_INST
LD Y, $INST
MVHL AZ, ND           # HL -> inst cache
#80/43
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/47

ADDR 0xC8             # else, iden PCH, iden PCH, iden PCH
NOP
NOP
LD HL, $IDEN$NULL
#30/4
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TMPL
FNH AZ, HLD           # A -> temp
#41/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$NULL
#50/20
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TMPH
FNH AZ, HLD           # A -> temp2
#61/28
LD HL, $INC$NULL
LDZ Y, $PCL
FNH DZ, HLD           # PCL = PCL+1
NOP
NOP
NOP
#70/36
NOP
NOP
LD HL, $PUSHPC_INST
LD Y, $INST
MVHL AZ, ND           # HL -> inst cache
#80/44
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/48
