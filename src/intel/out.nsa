# Output to port
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE OUT_PG

# assume: Y = $VMS
LD HL, $KERN?$NULL
LDZ Y, $EO
FNH DZ, HLA               # A=0 if kern
LD HL, $INC$FORK1
LD Y, $PCL
#10/9
LDN PC, $EXIT12           # exit if not kern
FNFH DZ, XD               # X,PCL = PCL+1
FNDL A, PC
#17/15

ADDR 0x10                 # PORT0
LD Y, $AREG
FNFH DZ, NA               # acc->N
LD PC, $EXIT35
#35

ADDR 0x16                 # PORT1
LD Y, $AREG
FNFH DZ, O1A              # acc->O1
LD PC, $EXIT35
#35

ADDR 0x1C                 # PORT2
LD Y, $AREG
FNFH DZ, O2A              # acc->O2
LD PC, $EXIT35
#35

ADDR 0x22                 # PORT3
LD Y, $AREG
FNFH DZ, O3A              # acc->O3
LD PC, $EXIT35
#35

ADDR 0x28                 # PORT4
LD Y, $AREG
FNFH DZ, O4A              # acc->O4
LD PC, $EXIT35
#35

ADDR 0x2E                 # PORT5
LD Y, $AREG
FNFH DZ, O5A              # acc->O5
LD PC, $EXIT35
#35

ADDR 0x34                 # PORT6
LD Y, $AREG
FNFH DZ, O6A              # acc->O6
LD PC, $EXIT35
#35

ADDR 0x3A                 # PORT7
LD Y, $AREG
FNFH DZ, O7A              # acc->O7
LD PC, $EXIT35
#35

$ADDR 0x40
LD HL, $INC$NULL
#30/2
LDZ Y, $TXWRIDX
FNH DZ, HLD               # tx write index+1
LD HL, $2COM$NULL
FNH A, HL                 # HL=-tx write index
LD Y, $TXRDIDX
#40/10
ADDHL DZ, NA              # A=tx read-tx write index
LDP PC, $EXIT46           # exit if tx read >= tx write
LD HL, $TXBUFF
MVHL A, XA
#51/18
LD HL, $IDEN$DEC
LD Y, $AREG
FNFH DZ, NA               # A = Acc
LDZ Y, $TXWRIDX
#60/26
FNFL DZ, Y                # Y = wr index-1
FNH A, HLD                # A -> tx wr buff
LD HL, $0x20
LD Y, $TMODE
#69/33
ORHL DZ, ND               # enable -> tx mode
NOP
LD HL, $INC2$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+2
#80/41
LD HL, $FETCH
DISHL DZ, PGA             # jump to next VMC
#86/45

ADDR 0x70                 # Jump to console page
LD HL, $INC$FORKC
LD PG, $CON_PG
#32

ADDR 0x74                 # Set Audio Mode
LD HL, $3
LD PC, $AUDIO32
#32

$EXIT46
MVHL A, NA                # NOP
MVHL A, NA                # NOP
LD PC, $EXIT56
#56

ADDR 0x80                 # PCL = 255, inc PCH
LDZ Y, $PCH
FNH DZ, HLD               # PCH = PCH+1      *** inc PCH ***
#21/3
LD HL, $IDEN$FORKP
FNH A, Y                  # Y = PCH
FNDL M, PC                # fork on port [PC]
#28/8

ADDR 0x88                 # Rx disable
LD HL, $0x10
LD Y, $RMODE
ORH DZ, ND                # Set Rx Mode LSB
$EXIT35
LD HL, $INC$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD
LD PC, $FETCH1_PG         # cycle available, goto fetch
#43/21

$EXIT12
FNH DZ, HLD               # PCL = PCL+1
LD HL, $ZERO?$NULL
FNH A, HLA
LDP HL, $INC$NULL
LDN HL, $IDEN$NULL
#21/29
LDZ Y, $PCH
FNH DZ, HLD
LD HL, $0
LD Y, $AREG
#29/36
MVHL AZ, ND               # 0->Acc
LD PC, $EXIT35
#35/40

$EXIT56
NOP
$EXIT57
MVHL A, NA                # NOP
$EXIT61
MVHL A, NA                # NOP
NOP
LD HL, $0
LD Y, $AREG
#70/50
MULH AZ, ND               # 0->Acc
$EXIT73
NOP
LD HL, $INC2$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+2
#80/58
LD HL, $FETCH
DISHL DZ, PGA             # jump to next VMC
#86/62

ADDR 0xC0                 # else, iden PCH, iden PCH
FNH A, HL                 # NOP
LD HL, $IDEN$FORKP
LDZ Y, $PCH
FNH DZ, Y                 # Y = PCH
FNDL M, PC                # fork on port [PC]
#28/8

ADDR 0xC8                 # Write to zpage
LD HL, $0x3F
#30/10
ANDHL M, NA               # A = [PC]&0x3F
LD HL, $0x80
LD Y, $TEMP
ORHL AZ, ND               # A|0x80 -> temp
#42/18
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, NA               # A = Acc
LDZ Y, $TEMP
#51/26
FNH DZ, Y                 # Y = temp
FNH AZ, HLD               # A -> Z[Y]
LD PC, $EXIT57
#57/30

$AUDIO32
LDZ Y, $AREG
ANDHL DZ, ND              # Acc = Acc&3
LD HL, $XGA?$NULL
#40/36
LD Y, $VMS
FNEH DZ, NA               # 0 if 3 cycles per line
LDP HL, $0xFE             # -2
LDN HL, $0xFD             # -3
LDZ Y, $AREG
#50/46
ADDHL DZ, NA              # A = Acc-2|3
LDN PC, $EXIT56           # exit is not enough cycles
LDZ HL, $IDEN$NULL
FNH DZ, HLA               # A = Acc
LD Y, $AMODE
#61/55
FNH AZ, HLD               # A -> Audio mode
LD HL, $0x80
LD Y, $AUDIO
MVHL AZ, ND               # mute audio
#71/62
LD PC, $EXIT73
#73/64
