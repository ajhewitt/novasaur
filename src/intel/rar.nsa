# Rotate right through carry (with fetch)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE RAR_PG

# assume: Y = $VMS
LDZ HL, $INC2$NULL
FNH DZ, HLD           # inc state
NOP
NOP
NOP
NOP
NOP
NOP
#10
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#19
LD HL, $REVERSE$NULL
LDZ Y, $AREG
FNH DZ, HLA           # A = Acc
LD HL, $LSR$NULL
LDP PC, $RESET_CARRY
#SET_CARRY
FNFH DZ, ND           # shift Acc right
#31
NOP
LD HL, $IDEN$NULL
LDZ Y, $FREG
FNH DZ, HLA           # A = flags
LDP HL, $0
LDN HL, $0x80
#41
LD Y, $AREG
ORHL DZ, ND           # set MSB of Acc
LD HL, $0x80
#49
LD Y, $FREG
ORHL DZ, ND           # set carry
LD HL, $INC$FORK1
LD Y, $PCL
#59
FNFH DZ, XD           # X,PCL = PCL+1
FNDL A, PC
#65

$RESET_CARRY
#29
FNFH DZ, ND           # shift Acc right
LD HL, $IDEN$NULL
LDZ Y, $FREG
FNH DZ, HLA           # A = flags
LDP HL, $0
LDN HL, $0x80
#41
LD Y, $AREG
ORHL DZ, ND           # set MSB of Acc
LD HL, $0x7F
#49
LD Y, $FREG           
ANDHL DZ, ND          # reset carry
LD HL, $INC$FORK1
LD Y, $PCL
#59
FNFH DZ, XD           # X,PCL = PCL+1
FNDL A, PC
#65

ADDR 0x80
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
#71
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # A -> inst cache,HL
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86

ADDR 0xC0
NOP
NOP
LD HL, $IDEN$NULL
LDZ Y, $PCH
#71
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # A -> inst cache,HL
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86
