# Warm Start
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE WARM_START

# Set E-reg
LD HL, $0xD1
LD Y, $EO
MVHL AZ, ED               # bank1,LED off
LD HL, $0xA0              # F=XGA48,A=SVGA60,3=VGA60
LD Y, $VMODE
MVHL AZ, ND               # 3 -> video mode
LD HL, $0x98              # E=XGA48,9=SVGA60,1=VGA60
LD Y, $VMS
MVHL AZ, ND               # mode+ext -> mode line
LD HL, $0
LD Y, $VSTART
MULH AZ, ND               # 0 -> vstart
LD Y, $CONY
MULH AZ, ND               # 0 -> console row

# Keyboard
LD HL, $0xD8              # -40
LD Y, $KTO                # PS/2 idle timeout (blocks)
MVHL AZ, ND
LD HL, $0
LD Y, $KMODE
MULH AZ, ND               # 0 -> Keyboard mode
LD Y, $KCWRIDX
MULH AZ, ND               # 0 -> Key code Wr index
LD Y, $KSWRIDX
MULH AZ, ND               # 0 -> Key scan Wr index
LD HL, $0xFF
LD Y, $KCRDIDX
MVHL AZ, ND               # -1 -> Key code Rd index
LD Y, $KSRDIDX
MVHL AZ, ND               # -1 -> Key scan Rd index

# Serial
LD HL, $0x40              # 0x60=on,0x40=off
LD Y, $RMODE
MVHL AZ, ND
LD HL, $0x80              # 0xA0=on,0x80=off
LD Y, $TMODE
MVHL AZ, ND
LD HL, $0xFF
LD Y, $RXRDIDX
MVHL AZ, ND               # -1 -> Rx Rd index
LD Y, $TXRDIDX
MVHL AZ, ND               # -1 -> Tx Rd index
LD HL, $0
LD Y, $RXWRIDX
MULH AZ, ND               # 0 -> Rx Wr index
LD Y, $TXWRIDX
MULH AZ, ND               # 0 -> Tx Wr index

# Console
LD HL, $0x06
LD Y, $CONL
MVHL AZ, ND               # 6 -> console left
LD Y, $CONX
MVHL AZ, ND               # 6 -> console column
LD HL, $0
LD Y, $CONB
ADDH AZ, ND               # left border+0 -> backspace stop
LD HL, $0x57
LD Y, $CONR
MVHL AZ, ND               # 87 -> console right
LD HL, $0xC4
LD Y, $CONH
MVHL AZ, ND               # -60 -> console height
LD HL, $0x5F
LD Y, $CONC
MVHL AZ, ND               # '_' -> console cursor

# Audio
LD HL, $0x00
LD Y, $AMODE
MVHL AZ, ND               # 0->number of voices
LD HL, $0x80
LD Y, $AUDIO
MVHL AZ, ND               # mute->audio

# Boot Kernel CPU
LD HL, $IDEN$NULL
LDZ Y, $HWSTAT
FNH DZ, HLA               # A = HW status
LDP HL, $0
LDN HL, $1
LD Y, $AREG
MVHL AZ, ND               # memory size -> Acc
LD HL, $0xF1
LD Y, $CTX0
MVHL AZ, ND               # 1->Context 0
LD HL, $0
LD Y, $CTXIDX
MULH AZ, ND               # reset context index
LD Y, $IMASK
MULH AZ, ND               # 0->IMASK = 0 (disable)
LD HL, $8
LD Y, $CREG
MVHL AZ, ND               # 8->C
LD HL, $0
LD Y, $DREG
MULH AZ, ND               # 0->D
LD Y, $TEMP
MULH AZ, ND               # 0->temp
LD Y, $TMPL
MULH AZ, ND               # 0->tmpL
LD HL, $0x80
LD Y, $TMPH
MVHL AZ, ND               # 0x80->tmpH
LD HL, $0xFF
LD Y, $PCH
MVHL AZ, ND
LD Y, $PCL
MVHL AZ, ND               # 0xFFFF->PC
LD HL, $COPYROM_INST
LD Y, $INST
MVHL AZ, ND               # Bootstrap Kernal

LD Y, $VMS
LD PG, $BSYNCE_PG         # start video loop
