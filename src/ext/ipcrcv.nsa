# Receive command as master (kernel)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE IPCRCV_PG

# assume: Y = $VMS
LD HL, $0xF0
LD Y, $AREG
ORHL DZ, NA               # A=n|0xF0
LD HL, $KERN?$7
#10
ANDL A, X                 # X=0xFn&0x07
LDZ Y, $EO
FNH DZ, HLA               # bank == kernel?
LDN PC, $EXIT19           # exit if not kernel
LD HL, $ZERO?$NULL
#20
LD Y, $CMDL
FNH D, HLA                # command == zero?
LDP PC, $EXIT26           # exit if command zero
LD HL, $IDEN$NULL
MULH A, ND                # 0 -> command
#30
LD Y, $AREG
MULH AZ, ND               # 0 -> Acc (command received)
LD Y, $BREG
FNH DZ, HLD               # context B -> B (seq)
#39
LD HL, $IDEN$NULL
LD Y, $CREG
FNH DZ, HLD               # context C -> C (cmd)
LD HL, $IDEN$NULL
LD Y, $DREG
#49
FNH DZ, HLD               # context D -> D (param 1)
LD HL, $IDEN$NULL
LD Y, $EREG
FNH DZ, HLD               # context E -> E (param 2)
LD HL, $IDEN$NULL
#59
LD Y, $HREG
FNH DZ, HLD               # context H -> H (param 3)
LD HL, $IDEN$NULL
LD Y, $LREG
FNH DZ, HLD               # context L -> L (param 4)
NOP
#70
NOP
NOP
NOP
NOP
LD HL, $INC2$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+2
#80
LD HL, $FETCH
DISHL DZ, PGA             # jump to next VMC
#86

$EXIT19
NOP
#20
NOP
NOP
NOP
NOP
NOP
NOP
$EXIT26
NOP
NOP
NOP
NOP
#30
NOP
LD HL, $INC$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+1
LD HL, $FETCH
DISHL DZ, PGA             # jump to next VMC
#43
