# Buffer to Shared Mem - A=CTX, D=index
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE SERSEND_PG

# 127-D = number of bytes in buffer
# bytes read from [D+1] up to [127]
# D=128 on exit, else TX buffer full, 128-D bytes left
# retry with D-1. If D==D on exit, not kernel
# assume: Y = $VMS
LD HL, $KERN?$NULL
LDZ Y, $EO
FNH DZ, HLA               # A=0 if root
LDN PC, $EXIT8
LD HL, $INC$CTXCOL
LD Y, $AREG
#11
FNCL DZ, X                # X=CTX col
LDZ Y, $DREG
FNH DZ, HLD               # Dreg+1
LDN PC, $EXIT20           # Exit if Dreg=128
LD HL, $IDEN$NULL
#21
FNH A, Y                  # Y=Dreg
FNFH D, NA                # A=[CTX,index]
LD Y, $TEMP
FNH AZ, HLD               # A->temp
#30
LD HL, $1COM$NULL
LDZ Y, $TXWRIDX
FNH DZ, HL                # HL=-tx write index
LD Y, $TXRDIDX
ADDHL DZ, NA              # A=tx read-tx write index
#42
LDP PC, $EXIT44           # exit if tx read >= tx write
LD HL, $TXBUFF
MVHL A, XA
LD HL, $IDEN$NULL
#51
LD Y, $TEMP
FNFH DZ, NA               # A=temp
LDZ Y, $TXWRIDX
FNH DZ, Y                 # Y=wr index
#60
FNH A, HLD                # A->tx wr buff
LD HL, $INC$NULL
LDZ Y, $TXWRIDX
FNH DZ, HLD               # wr index+1
LD HL, $0x20              # 0x20 aka $INC2$NULL
#70
LD Y, $TMODE
ORHL DZ, ND               # enable -> tx mode
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+2
#80
LD HL, $SERSEND_INST
DISHL DZ, PGA             # jump to next VMC
#86

$EXIT8
NOP
NOP
#10
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#20
$EXIT20
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#30
NOP
NOP
NOP
NOP
NOP
LD HL, $INC$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+1
LD PG, $FETCH1_PG         # Done in 1 cycle, fetch
#43

$EXIT44
NOP
NOP
NOP
NOP
NOP
NOP
#50
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#60
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#70
NOP
NOP
NOP
NOP
LD HL, $INC2$NULL
LDZ Y, $VMS               # set Y = $VMS on exit
FNH DZ, HLD               # VMS+2
#80
LD HL, $FETCH
DISHL DZ, PGA             # jump to next VMC
#86
