# Receive record - two bytes per 2-cycle, fetch when done
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE RECRECV_PG

#DREG: RAM page
#EREG: RAM X index
#TEMP: buffer index, init 0xFF
# assume: Y = $VMS
LD HL, $INC2$FORK3
FNFH DZ, ND            # VMS+2
LD Y, $EREG
FNDL DZ, PC            # Fork on E
#10/8

$EXIT27
NOP
NOP
NOP
#30/11
NOP
$EXIT31
LD HL, $DEC$NULL
LDZ Y, $VMS            # set Y = $VMS on exit
FNH DZ, HLD
LD HL, $FETCH
DISHL DZ, PGA          # jump to next VMC
#43/21

$EXIT78
LD HL, $RECV_INST
#80/23
LD Y, $VMS             # set Y = $VMS on exit
DISHL DZ, PGA          # jump to next VMC
#86/27

ADDR 0x20              # E = 254, iden D, inc D
NOP
NOPZ
FNH DZ, HLD            # E+2
LD HL, $INC2$IDEN
LD Y, $CTX0
FNFL DZ, X             # X = context col
#21/9
LDZ Y, $TEMP
FNH DZ, HLD            # row = row+2
LDN PC, $EXIT27        # exit at end of buffer
LD HL, $IDEN$DEC
FNFL A, Y              # Y = row-1
#31/18
FNFH D, NA             # A = [Y,X]
LD Y, $EREG
FNFL DZ, X             # X = E-1
LDZ Y, $DREG
#41/26
FNH DZ, Y              # Y = D
FNFH A, NM             # A->[Y,X]
LDZ HL, $INC$IDEN
FNH DZ, HLD            # D = D+1         *** inc D ***
#50/32
LD HL, $IDEN$IDEN
LD Y, $CTX0
FNFL DZ, X             # X = context col
LDZ Y, $TEMP
FNH DZ, Y              # Y = row
#61/41
FNFH D, NA             # A = [Y,X]
LD Y, $EREG
FNFL DZ, X             # X = E
LDZ Y, $DREG
#71/49
FNH DZ, Y              # Y = D
FNFH A, NM             # A->[Y,X]
LD PC, $EXIT78
#78/54

ADDR 0x58              # E = 255, inc D, iden D
FNH DZ, HLD            # E+2
LD HL, $INC$IDEN
LDZ Y, $DREG
FNH DZ, HLD            # D = D+1         *** inc D ***
LD HL, $INC2$IDEN
#20/8
LD Y, $CTX0
FNFL DZ, X             # X = context col
LDZ Y, $TEMP
FNH DZ, HLD            # row = row+2
LDN PC, $EXIT31        # exit at end of buffer
#30/17
LD HL, $IDEN$DEC
FNFL A, Y              # Y = row-1
FNFH D, NA             # A = [Y,X]
LD Y, $EREG
#40/25
FNFL DZ, X             # X = E-1
LDZ Y, $DREG
FNH DZ, Y              # Y = D
FNFH A, NM             # A->[Y,X]
#50/32
LD HL, $IDEN$IDEN
LD Y, $CTX0
FNFL DZ, X             # X = context col
LDZ Y, $TEMP
FNH DZ, Y              # Y = row
#61/41
FNFH D, NA             # A = [Y,X]
LD Y, $EREG
FNFL DZ, X             # X = E
LDZ Y, $DREG
#71/49
FNH DZ, Y              # Y = D
FNFH A, NM             # A->[Y,X]
LD PC, $EXIT78
#78/54

ADDR 0x90              # E = 0, iden D, iden D
NOP
NOPZ
$CONT12
FNH DZ, HLD            # E+2
LD HL, $INC2$IDEN
LD Y, $CTX0
FNFL DZ, X             # X = context col
#21/9
LDZ Y, $TEMP
FNH DZ, HLD            # row = row+2
LDN PC, $EXIT27        # exit at end of buffer
LD HL, $IDEN$DEC
FNFL A, Y              # Y = row-1
#31/18
FNFH D, NA             # A = [Y,X]
LD Y, $EREG
FNFL DZ, X             # X = E-1
LDZ Y, $DREG
#41/26
FNH DZ, Y              # Y = D
FNFH A, NM             # A->[Y,X]
LD HL, $IDEN$IDEN
LD Y, $CTX0
#50/33
FNFL DZ, X             # X = context col
LDZ Y, $TEMP
FNH DZ, Y              # Y = row
FNFH D, NA             # A = [Y,X]
#60/40
LD Y, $EREG
FNFL DZ, X             # X = E
LDZ Y, $DREG
FNH DZ, Y              # Y = D
#69/47
FNFH A, NM             # A->[Y,X]
NOP
NOP
NOP
NOP
LD PC, $EXIT78
#78/55

ADDR 0xC8              # else, iden D, iden D
LDZ PC, $CONT12
