; TITLE 'DISK QUADRANT'
;
; JAN 30, 2024
;
; PAGE 0: BOOT CODE THEN DISK CHECK MAP
; PAGES 1-250: 500 RECORDS OF 128 BYTES
; PAGE 251: ECC BYTES 0 OF EACH TRACK
; PAGE 252: ECC BYTES 1 OF EACH TRACK
; PAGE 253: CHECKSUMS OF RECORDS AT 0xTT00
; PAGE 254: CHECKSUMS OF RECORDS AT 0xTT80
; PAGE 255: DISK CODE (RELOAD ON BOOT)
;
	.PROJECT disk.com

STACK   EQU     00FFH
CMDSND	EQU	05DDH
DSKSEND	EQU	14DDH
DSKRECV	EQU	15DDH

TRACKS  EQU     250

	.ORG    0FF00H

START:  LXI     SP, STACK
WAIT:	MVI     C, 0    ;CMD NOP
SEND:   DW      CMDSND  ;SEND CMD; YIELD
	MOV	A, C    ;A=CMD
	CPI	4       ;CMD>=4?
	JNC     WAIT    ;SKIP HIGH CMD
	MOV     A, D
	CPI     TRACKS  ;TRACK>=250?
	JNC     WAIT    ;SKIP HIGH TRACKS
	INR     D       ;AVOID ZERO PAGE
	MOV	A, E    ;A=00000SQQ - 4 QUADS OF 2 SECTORS
	ANI     4       ;A=00000S00 - CLEAR QUAD
	RRC             ;A=000000S0
	RRC             ;A=0000000S
	RRC             ;A=S0000000
	MOV     E, A
	PUSH	D       ;SAVE DE
	LXI	H, TABLE
	MVI	D, 0
	MOV	A, C	;A=CMD
	ADD	A	;A*=2
	MOV	E, A	;OFFSET
	DAD	D	;ADD TO TABLE
	MOV	E, M	;LOW BYTE
	INX	H
	MOV	D, M	;HIGH BYTE
	XCHG		;INTO HL
	POP     D       ;DE==TTTTTTTTS0000000
	PCHL		;GO THERE
;
; DISK GETS RECORD
; - COPY FROM MEM [DE] TO BUFFER
; - SEND RETURN
;
GET:	XRA     A       ;START SHM@0
        MOV     C, A    ;INIT CHECKSUM
        LXI     H, 0    ;INIT ECC
        DW	DSKSEND	;COPY FROM MEM W/ECC
	MVI     C, 1    ;CMD RETURN
	JMP	SEND    ;SEND RETURN
;
; DISK PUTS RECORD
; - COPY FROM BUFFER TO MEM [DE]
; - SEND RETURN
;
PUT:    XRA     A       ;START SHM@0
        MOV     C, A    ;INIT CHECKSUM
        LXI     H, 0    ;INIT ECC
        DW	DSKRECV	;COPY TO MEM W/ECC
	MVI     C, 1    ;CMD RETURN
	JMP	SEND    ;SEND RETURN
;
; DISK CHECK
;
CHK:    JMP     WAIT
;
; COMMAND JUMP VECTOR TABLE
;
TABLE:  DW      START   ;RESET
	DW      WAIT    ;RETURN N/A
	DW      GET     ;CMD 2: GET
	DW      PUT     ;CMD 3: PUT
	DW      CHK     ;CMD 4: CHK
